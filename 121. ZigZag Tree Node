#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> zigzagTreeTraversal(TreeNode<int> *root)
{
    vector<int> res;
    	if(root == NULL) return res;
    	bool flag = true;
    	
    	queue<TreeNode<int>*> q;
        q.push(root);

        while(!q.empty()){
            
            int size = q.size();
            vector<int> ans(size);
            for(int i=0; i<size; i++){
                TreeNode<int>* temp = q.front();
                q.pop();
                
                int index = flag ? i : size - i - 1;
                
                ans[index] = temp->data;
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
            }
            for (int val : ans) {
              res.push_back(val);
            }
            flag = !flag;
        }
        return res;
}
