#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
// void inorder(BinaryTreeNode<int>* root,vector<int> &v){
//     if(root == NULL){
//         return;
//     }
//     inorder(root->left,v);
//     v.push_back(root->data);
//     inorder(root->right,v);
// }

bool isBST(BinaryTreeNode<int> *root, int min, int max){
    if(root == NULL){
        return true;
    }
    if(root->data >= min && root->data <= max){
        bool left = isBST(root->left, min, root->data);
        bool right = isBST(root->right, root->data, max);
        return left&&right;
    }else{
        return false;
    }
}


bool validateBST(BinaryTreeNode<int> *root) {
    // vector<int> v;
    // inorder(root,v);
    // for(int i=0; i<v.size()-1; i++){
    //     if(v[i] >= v[i+1]){
    //         return false;
    //     }
    // }
    return isBST(root,INT_MIN, INT_MAX);
}
