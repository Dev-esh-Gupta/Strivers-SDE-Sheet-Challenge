#include <bits/stdc++.h> 
void topSort(int node, vector<bool> &visited, 
stack<int> &st, unordered_map<int,list<int>> &adj){
    visited[node] = true;

    for(auto neighbour : adj[node]){
        if(!visited[neighbour]){
            topSort(neighbour,visited,st,adj);
        }
    }
    st.push(node);
    return;
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    // creating adjacency list 
    unordered_map<int,list<int>> adj;
    for(int i=0; i<e; i++){
        int u = edges[i][0];
        int v = edges[i][1];

        adj[u].push_back(v);
    }

    // creating visited map
    vector<bool> visited(v);
    stack<int> st;
    for(int i=0; i<v; i++){
        if(!visited[i]){
            topSort(i,visited,st,adj);
        }
    }
    vector<int> ans;
    while(!st.empty()){
        ans.push_back(st.top());
        st.pop();
    }

    return ans;
}
