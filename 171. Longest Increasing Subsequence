class Solution {
    int solve(vector<int>& arr, int n, int prev, int index, vector<vector<int>> &dp){
        if(index >= n){
            return 0;
        }
        if(prev != -1 && dp[prev][index] != -1) return dp[prev][index];
        int take = 0;
        if(prev == -1 || arr[prev] < arr[index]){
            take = 1 + solve(arr,n,index,index+1,dp);
        }
        int skip = solve(arr,n,prev,index+1,dp);

        if(prev != -1)
            dp[prev][index] = max(take,skip);

        return max(take,skip);
    }
public:
    int lengthOfLIS(vector<int>& arr) {
        int n = arr.size();
        vector<vector<int>> dp(n+1, vector<int>(n+1,-1));
        return solve(arr,n,-1,0,dp);
    }
};
