#include <bits/stdc++.h> 
void insert(int val, int arr[], int &size){
    size++;
    int index = size;
    arr[index] = val;

    while(index > 1){
        int parent = index/2;
        if(arr[parent] > arr[index]){
            swap(arr[parent],arr[index]);
            index = parent;
        }else{
            return;
        }
    }
}
int deleteFromHeap(int arr[], int &size){
    int res = arr[1];
    arr[1] = arr[size];
    size--;
    int i = 1;
    while(i<size){
        int leftIndex = 2 * i;
        int rightIndex = 2 * i + 1;
        if(leftIndex <= size && arr[leftIndex] < arr[i] && arr[leftIndex] < arr[rightIndex]){
            swap(arr[leftIndex],arr[i]);
            i = leftIndex;
        }else if(rightIndex <= size && arr[rightIndex] < arr[i]){
            swap(arr[rightIndex],arr[i]);
            i = rightIndex;
        }else{
            return res;
        }
    }
    return res;
}
vector<int> minHeap(int n, vector<vector<int>>& q) {
    int arr[100000];
    int size = 0;
    arr[0] = -1;
    vector<int> res;
    for(int i=0; i<q.size(); i++){
        if(q[i][0] == 0){
            insert(q[i][1],arr,size);
        }else if(q[i][0] == 1){
            res.push_back(deleteFromHeap(arr,size));
        }
    }
    return res;
}
